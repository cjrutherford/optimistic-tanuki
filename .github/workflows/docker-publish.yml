name: Docker Build and Push

on:
  push:
    branches:
      - '**' # Triggers on pushes to all branches

jobs:
  build_and_push_client_interface:
    name: Build and Push Client Interface
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install Dependencies
        id: install
        run: |
          echo "Installing dependencies for client interface"
          npm install --legacy-peer-deps

      - name: Build Nx Projects
        id: build
        run: |
          echo "Building Nx project for client interface"
          npx nx build client-interface --configuration=production
          ls -lath && pwd

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: cjrutherford/optimistic_tanuki_client_interface
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=prod,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/client-interface/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  build_and_push:
    name: Build and Push ${{ matrix.service }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [assets, authentication, social, profile, tasks]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install Dependencies
        id: install
        run: |
          echo "Installing dependencies for service: ${{ matrix.service }}"
          npm install --legacy-peer-deps
      - name: Build Nx Projects
        id: build
        run: |
          echo "Building Nx project for service: ${{ matrix.service }}"
          npx nx build ${{ matrix.service }} --configuration=production
          ls -lath && pwd
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: cjrutherford/optimistic_tanuki_${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=prod,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
